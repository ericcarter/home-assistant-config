homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 441
  # metric for Metric, imperial for Imperial
  unit_system: Imperial
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Chicago
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
#introduction:

# Enables the frontend

frontend:
  themes: !include_dir_merge_named themes

system_health:

mobile_app:

logger:
  default: debug
  logs:
    homeassistant.components.mqtt: debug
    # homeassistant.components.device_tracker.unifi: debug

panel_iframe:
  glances:
    title: Glances
    icon: mdi:speedometer
    url: !secret glances_url

# Enables configuration UI
config:

lovelace:
  mode: yaml

cover:
  - platform: myq
    username: !secret myq_username
    password: !secret myq_password
    type: chamberlain
  
influxdb:
  host: 10.1.1.28
  username: !secret influx_user
  password: !secret influx_pass
  database: home_assistant

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  base_url: !secret base_url
  api_password: !secret http_password
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

mqtt:
  broker: localhost
  

#binary sensors
binary_sensor:
#  - platform: huesensor
  
# Sensors
sensor:
  - platform: darksky
    api_key: !secret darksky_api
    monitored_conditions:
      - summary
      - temperature
      - precip_type
      - precip_probability
      - precip_accumulation
      - wind_speed
      - humidity
      - apparent_temperature
      
#  - platform: huesensor
  - platform: template
    sensors:
      office_motion_lux:
        friendly_name: 'Office Light Level'
        value_template: '{{states.binary_sensor.office_motion_motion_sensor.attributes.lx}}'
        unit_of_measurement: lux
        
      office_motion_battery:
        friendly_name: 'Office Motion Sensor Battery'
        value_template: '{{states.binary_sensor.office_motion_motion_sensor.attributes.battery}}'
#        unit_of_measurement: percent
        
      office_motion_temp:
        friendly_name: 'Living Room Motion Sensor Temp'
        value_template: '{{states.binary_sensor.office_motion_motion_sensor.attributes.temperature}}'
        unit_of_measurement: °C
        
      kitchen_lux:
        friendly_name: 'Kitchen Light Level'
        value_template: '{{states.binary_sensor.kitchen_motion_motion_sensor.attributes.lx}}'
        unit_of_measurement: lux
        
      kitchen_battery:
        friendly_name: 'Kitchen Motion Sensor Battery'
        value_template: '{{states.binary_sensor.kitchen_motion_motion_sensor.attributes.battery}}'
#        unit_of_measurement: percent
        
#      kitchen_motion_temp:
#        friendly_name: 'Kitchen Motion Sensor Temp'
#        value_template: '{{states.sensor.kitchen_motion_motion_sensor.attributes.temperature}}'
#        unit_of_measurement: °C
        
      hallway_lux:
        friendly_name: 'Hallway Light Level'
        value_template: '{{states.binary_sensor.hallway_motion_motion_sensor.attributes.lx}}'
        unit_of_measurement: lux
        
      hallway_battery:
        friendly_name: 'Hallway Motion Sensor Battery'
        value_template: '{{states.binary_sensor.hallway_motion_motion_sensor.attributes.battery}}'
#        unit_of_measurement: percent
        
#      hallway_motion_temp:
#        friendly_name: 'Hallway Motion Sensor Temp'
#        value_template: '{{states.sensor.hallway_motion_motion_sensor.attributes.temperature}}'
#        unit_of_measurement: °C

  - platform: mqtt
    name: "Basement Stairs Motion"
#    command_topic: "smartthings/Basement Stairs/motion/cmd"
    state_topic: "smartthings/Basement Stairs/motion/state"
    qos: 1
#    payload_on: "active"
#    payload_off: "inactive"
    icon: mdi:run-fast


    
    
  - platform: mqtt  
    state_topic: "bruh/sensornode2"  
    name: "SN2 Humidity"  
    unit_of_measurement: "%"  
    value_template: '{{ value_json.humidity | round(1) }}'  
  
  - platform: mqtt  
    state_topic: "bruh/sensornode2"  
    name: "SN2 LDR"
    ##This sensor is not calibrated to actual LUX. Rather, this a map of the input voltage ranging from 0 - 1023.
    unit_of_measurement: "LUX"  
    value_template: '{{ value_json.ldr }}'  
  
  - platform: mqtt  
    state_topic: "bruh/sensornode2"  
    name: "SN2 PIR"  
    value_template: '{{ value_json.motion }}'  
  
  - platform: mqtt  
    state_topic: "bruh/sensornode2"  
    name: "SN2 Temperature"  
    unit_of_measurement: "°F"  
    value_template: '{{ value_json.temperature | round(1) }}'  

  - platform: mqtt
    state_topic: "bruh/sensornode2"
    name: "SN2 Real Feel"
    unit_of_measurement: "°F"
    value_template: '{{ value_json.heatIndex | round(1) }}'

  - platform: mqtt
    name: 3D Printer Voltage
    state_topic: "stat/3dprinter/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Voltage }}"
    unit_of_measurement: "V"
  - platform: mqtt
    name: 3D Printer Current
    state_topic: "stat/3dprinter/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Current }}"
    unit_of_measurement: "A"
  - platform: mqtt
    name: 3D Printer Power
    state_topic: "stat/3dprinter/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Power }}"
    unit_of_measurement: "W"
  - platform: mqtt
    name: 3D Printer Energy Today
    state_topic: "stat/3dprinter/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: 3D Printer Energy Yesterday
    state_topic: "stat/3dprinter/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Yesterday }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: 3D Printer Energy Total
    state_topic: "stat/3dprinter/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Total }}"
    unit_of_measurement: "kWh"

  - platform: mqtt
    name: Heater Aux Pump Voltage
    state_topic: "stat/aux_pump/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Voltage }}"
    unit_of_measurement: "V"
  - platform: mqtt
    name: Heater Aux Pump Current
    state_topic: "stat/aux_pump/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Current }}"
    unit_of_measurement: "A"
  - platform: mqtt
    name: Heater Aux Pump Power
    state_topic: "stat/aux_pump/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Power }}"
    unit_of_measurement: "W"
  - platform: mqtt
    name: Heater Aux Pump Energy Today
    state_topic: "stat/aux_pump/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: Heater Aux Pump Energy Yesterday
    state_topic: "stat/aux_pump/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Yesterday }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: Heater Aux Pump Energy Total
    state_topic: "stat/aux_pump/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Total }}"
    unit_of_measurement: "kWh"

  - platform: mqtt
    name: Christmas Tree Voltage
    state_topic: "stat/christmas_tree/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Voltage }}"
    unit_of_measurement: "V"
  - platform: mqtt
    name: Christmas Tree Current
    state_topic: "stat/christmas_tree/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Current }}"
    unit_of_measurement: "A"
  - platform: mqtt
    name: Christmas Tree Power
    state_topic: "stat/christmas_tree/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Power }}"
    unit_of_measurement: "W"
  - platform: mqtt
    name: Christmas Tree Energy Today
    state_topic: "stat/christmas_tree/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: Christmas Tree Energy Yesterday
    state_topic: "stat/christmas_tree/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Yesterday }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: Christmas Tree Energy Total
    state_topic: "stat/christmas_tree/STATUS10"
    value_template: "{{ value_json.StatusSNS.ENERGY.Total }}"
    unit_of_measurement: "kWh"
    
#  - platform: mqtt
#    name: Server Rack Heater Voltage
#    state_topic: "stat/server_rack_heater/STATUS10"
#    value_template: "{{ value_json.StatusSNS.ENERGY.Voltage }}"
#    unit_of_measurement: "V"
#  - platform: mqtt
#    name: Server Rack Heater Current
#    state_topic: "stat/server_rack_heater/STATUS10"
#    value_template: "{{ value_json.StatusSNS.ENERGY.Current }}"
#    unit_of_measurement: "A"
#  - platform: mqtt
#    name: Server Rack Heater Power
#    state_topic: "stat/server_rack_heater/STATUS10"
#    value_template: "{{ value_json.StatusSNS.ENERGY.Power }}"
#    unit_of_measurement: "W"
#  - platform: mqtt
#    name: Server Rack Heater Energy Today
#    state_topic: "stat/server_rack_heater/STATUS10"
#    value_template: "{{ value_json.StatusSNS.ENERGY.Today }}"
#    unit_of_measurement: "kWh"
#  - platform: mqtt
#    name: Server Rack Heater Energy Yesterday
#    state_topic: "stat/server_rack_heater/STATUS10"
#    value_template: "{{ value_json.StatusSNS.ENERGY.Yesterday }}"
#    unit_of_measurement: "kWh"
#  - platform: mqtt
#    name: Server Rack Heater Energy Total
#    state_topic: "stat/server_rack_heater/STATUS10"
#    value_template: "{{ value_json.StatusSNS.ENERGY.Total }}"
#    unit_of_measurement: "kWh"
    
  - platform: mqtt
    name: Server Rack Voltage
    state_topic: "stat/server_rack/SENSOR"
    value_template: "{{ value_json.StatusSNS.ENERGY.Voltage }}"
    unit_of_measurement: "V"
  - platform: mqtt
    name: Server Rack Current
    state_topic: "stat/server_rack/SENSOR"
    value_template: "{{ value_json.StatusSNS.ENERGY.Current }}"
    unit_of_measurement: "A"
  - platform: mqtt
    name: Server Rack Power
    state_topic: "stat/server_rack/SENSOR"
    value_template: "{{ value_json.StatusSNS.ENERGY.Power }}"
    unit_of_measurement: "W"
  - platform: mqtt
    name: Server Rack Energy Today
    state_topic: "stat/server_rack/SENSOR"
    value_template: "{{ value_json.StatusSNS.ENERGY.Today }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: Server Rack Energy Yesterday
    state_topic: "stat/server_rack/SENSOR"
    value_template: "{{ value_json.StatusSNS.ENERGY.Yesterday }}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: Server Rack Energy Total
    state_topic: "stat/server_rack/SENSOR"
    value_template: "{{ value_json.StatusSNS.ENERGY.Total }}"
    unit_of_measurement: "kWh"

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

# Cloud
cloud:

  
ecobee:
  api_key: !secret ecobee_api

#unifi:
#  controllers:
#    - host: 10.1.1.22
      

  
#device_tracker:
#  - platform: unifi
#    host: 10.1.1.22
#    username: !secret unifi_user
#    password: !secret unifi_password
#    interval_seconds: 10
#    detection_tim: 120
#    consider_home: 60
#    verify_ssl: false
#    new_device_defaults:
#      track_new_devices: False
      
#  - platform: huesensor

media_player:
  - platform: plex

  - platform: androidtv
    name: Shield TV
    host: 10.1.50.12

  - platform: spotify
    client_id: !secret spotify_client_id
    client_secret: !secret spotify_client_secret
  
  - platform: kodi
    host: 10.1.1.125

  - platform: denonavr
    host: 10.1.50.17
    name: Denon AVR
    
hue:
  bridges:
    - host:  10.1.70.17
      allow_hue_groups: false
      allow_unreachable: true
    
camera:
  - platform: mjpeg
    name: 3D Printer
    mjpeg_url: http://10.1.50.35/webcam/?action=stream

  - platform: mjpeg
    mjpeg_url: http://10.1.1.43:81/mjpg/garage
    name: Garage
#    username: !secret bi_username
#    password: !secret bi_password
#    authentication: basic
  - platform: mjpeg
    mjpeg_url: http://10.1.1.43:81/mjpg/driveway
    name: Driveway
  - platform: mjpeg
    mjpeg_url: http://10.1.1.43:81/mjpg/backyardgarage
    name: Backyard Garage
  - platform: mjpeg
    mjpeg_url: http://10.1.1.43:81/mjpg/backyarddeck
    name: Backyard Deck
  - platform: mjpeg
    mjpeg_url: http://10.1.1.43:81/mjpg/frontdoor
    name: Front Door

google_assistant:
  project_id: !secret gass_project_id
  api_key: !secret gass_api
  exposed_domains:
    - switch
    - light
    - group
    - media_player
    - climate

light:  
  - platform: mqtt
    schema: json
    name: "SN2 LED"  
    state_topic: "bruh/sensornode2"  
    command_topic: "bruh/sensornode2/set"  
    brightness: true  
#    flash: true  
    rgb: true  
    optimistic: false  
    qos: 0 

  - platform: mqtt
    schema: json
    unique_id: kitchencabinet
    name: "Kitchen Cabinets"
    state_topic: "bruh/kitchen_cabinet"
    command_topic: "bruh/kitchen_cabinet/set"
    effect: true
    effect_list:
      - bpm
      - candy cane  
      - confetti  
      - cyclon rainbow  
      - dots  
      - fire  
      - glitter  
      - juggle  
      - lightning
      - noise  
      - police all  
      - police one  
      - rainbow  
      - rainbow with glitter  
      - ripple  
      - sinelon  
      - solid  
      - twinkle  
    brightness: true
#    flash: true
    rgb: true
    optimistic: false
    qos: 0
    
  - platform: mqtt
    schema: json
    unique_id: kitchenstairs
    name: "Kitchen Stairs"
    state_topic: "bruh/kitchen_stairs"
    command_topic: "bruh/kitchen_stairs/set"
    effect: true
    effect_list:
      - bpm
      - candy cane  
      - confetti  
      - dots  
      - fire  
      - glitter  
      - juggle  
      - lightning
      - Murica
      - noise  
      - police all  
      - police one  
      - rainbow  
      - rainbow with glitter  
      - ripple  
      - sinelon  
      - solid  
      - twinkle  
    brightness: true
#    flash: true
    rgb: true
    optimistic: false
    qos: 0

input_number:
  kitchen_cabinet_animation_speed:
    name: Kitchen Cabinet Animation Speed
    initial: 150
    min: 1
    max: 150
    step: 10
    
  kitchen_stairs_animation_speed:
    name: Kitchen Stairs Animation Speed
    initial: 150
    min: 1
    max: 150
    step: 10

automation: 
  - alias: "Kitchen Cabinet Animation Speed"
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: input_number.kitchen_cabinet_animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/kitchen_cabinet/set"
          payload: '{"transition":{{ trigger.to_state.state | int }}}'

  - alias: "Kitchen Stairs Animation Speed"
    initial_state: True
    hide_entity: False
    trigger:
      - platform: state
        entity_id: input_number.kitchen_stairs_animation_speed
    action:
      - service: mqtt.publish
        data_template:
          topic: "bruh/kitchen_stairs/set"
          payload: '{"transition":{{ trigger.to_state.state | int }}}'
          
switch:
  - platform: mqtt
    name: "Octopi"
    command_topic: "cmnd/octopi/power"
    state_topic: "stat/octopi/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
    
  - platform: mqtt
    name: "3D Printer"
    command_topic: "cmnd/3dprinter/power"
    state_topic: "stat/3dprinter/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
    
  - platform: mqtt
    name: "Heater Aux Pump"
    command_topic: "cmnd/aux_pump/power"
    state_topic: "stat/aux_pump/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true
    
#  - platform: mqtt
#    name: "Server Rack Heater"
#    command_topic: "cmnd/server_rack_heater/power"
#    state_topic: "stat/server_rack_heater/POWER"
#    qos: 1
#    payload_on: "ON"
#    payload_off: "OFF"
#    retain: true
    
  - platform: mqtt
    name: "Server Rack"
    command_topic: "cmnd/server_rack/power"
    state_topic: "stat/server_rack/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true

  - platform: mqtt
    name: "Christmas Tree"
    command_topic: "cmnd/christmas_tree/power"
    state_topic: "stat/christmas_tree/POWER"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    retain: true

octoprint:
    host: 10.1.50.35
    api_key: !secret octoprint_api
    bed: true
    number_of_tools: 2
    sensors:
      monitored_conditions:
        - 'Current State'
        - 'Temperatures'
        - 'Job Percentage'
        - 'Time Elapsed'
        - 'Time Remaining'

remote:
  - platform: harmony
    name: Living Room
    host: 10.1.70.200
   
group: !include groups.yaml
#automation: !include automations.yaml
script: !include scripts.yaml